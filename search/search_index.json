{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Miguel Alvarado Dorado's Course Notes","text":"<p>This is my home page. I will use it to organize and share my course notes.</p>"},{"location":"tutorials/go-setup/","title":"Go Tutorial","text":"<p>In this tutorial, you'll learn how to set up a development environment for Go using Docker, Visual Studio Code, and Git. By the end of this tutorial, you'll have a fully functional Go project, running in a VS Code dev container, and you'll know how to write, build, and run a simple Go program.</p>"},{"location":"tutorials/go-setup/#prerequisites","title":"Prerequisites","text":"<ol> <li>Docker Desktop App</li> <li>Visual Studio Code</li> <li>Git</li> </ol>"},{"location":"tutorials/go-setup/#setting-up-a-dev-container-for-go","title":"Setting Up a Dev Container for Go","text":""},{"location":"tutorials/go-setup/#step-1-creating-a-local-directory-and-initializing-with-git","title":"Step 1: Creating a Local Directory and Initializing with Git","text":"<ol> <li>Navigate to your terminal/command prompt</li> <li>Create a new directory named \"first-go-project\" in a directory of your choice <pre><code>mkdir first-go-project\ncd first-go-project\n</code></pre></li> <li>To initialize your new directory with git use:  <pre><code>git init\n</code></pre></li> </ol>"},{"location":"tutorials/go-setup/#dev-container-configuration","title":"Dev Container Configuration","text":"<ol> <li>Before you begin, install the Dev Containers extension for VS Code</li> <li>Now open your first-go-project directory in VS Code</li> <li>Create a .devcontainer directory in your project directory with a file named devcontainer.json with the following content, changing \"latest\" to the lastest version of Go when you are completing this tutorial: <pre><code>{\n  \"name\": \"First Go Project\",\n  \"image\": \"mcr.microsoft.com/vscode/devcontainers/go:latest\",\n  \"customizations\": {\n    \"vscode\": {\n      \"settings\": {},\n      \"extensions\": [\"ms-vscode.go\"]\n    }\n  }\n}\n</code></pre></li> </ol> <p>Note</p> <ul> <li>\"name\" is simply what you are calling your dev container</li> <li>\"image\" defines the Docker image to use, in this case the latest version of a Go environment</li> <li>\"customizations\" is useful when you want to add any important extenisions to make sure your project works for anyone using your dev container</li> </ul>"},{"location":"tutorials/go-setup/#creating-the-go-project","title":"Creating the Go Project","text":"<ol> <li>Before you begin, you must reopen your project in a VS Code Dev Container. To do this, press Ctrl+Shift+P (or Cmd+Shift+P on Mac), search for \"Dev Contianers: Reopen in Container\" and select this option.</li> <li>Once it opens, try running <code>go version</code> in your terminal to check if you are on the latest version of Go. </li> <li>Now create a new directory named \"hello\" to add your Go program by using the following commands in the terminal: <pre><code>mkdir hello\ncd hello\n</code></pre></li> <li>Enable dependency tracking for your code by using the command <code>go mod init example/hello</code>. It will create a go.mod file in your hello directory.</li> <li>Now create a new hello.go file in your hello directory to write your program.</li> <li>Paste the following code into your hello.go file: <pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n  fmt.Println(\"Hello COMP423\")\n}\n</code></pre></li> <li>Now when you run <code>go run .</code> in your terminal, \"Hello COMP423\" should print out.</li> </ol> <p>Note</p> <p>Instead of using the <code>run</code> subcommand, which builds your code into a executable binary and then runs it, you could use the <code>build</code> subcommand to only build your code into an executable binary file and you can choose to run it manually or distribute it to your liking. To use the <code>build</code> subcommand, type <code>go build hello.go</code> in your terminal, and then you can run it by running <code>./hello</code> in your terminal, which prints out \"Hello COMP423\".</p>"},{"location":"tutorials/go-setup/#references","title":"References","text":"<ol> <li>Starting a Static Website Project with MkDocs</li> </ol>"},{"location":"tutorials/go-setup/#contributors","title":"Contributors","text":"<ul> <li>Primary author: Miguel Alvarado Dorado</li> <li>Reviewer: Boluwatife Adeshina</li> </ul>"}]}